<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--开启注解扫描-->
    <!--<context:component-scan base-package="cn.itcast"/>

    &lt;!&ndash;配置service&ndash;&gt;
    <bean id="customerService" class="cn.itcast.service.impl.CustomerServiceImpl">
        &lt;!&ndash;给业务层注入dao&ndash;&gt;
        <property name="customerDao" ref="customerDao"/>
    </bean>

    &lt;!&ndash;配置dao&ndash;&gt;
    <bean id="customerDao" class="cn.itcast.dao.impl.CustomerDaoImpl">
        &lt;!&ndash;给dao层注入jdbcTemplate&ndash;&gt;
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>-->

    <!--配置jdbcTemplate-->
    <!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        &lt;!&ndash;给jdbcTemplate层注入数据源&ndash;&gt;
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    &lt;!&ndash;配置数据源&ndash;&gt;
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/user?serverTimezone=UTC"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>-->

    <!--开启properties扫描
    <context:property-placeholder location="classpath:jdbc.properties" />
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>-->

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置事务的属性
  		id:指定advice的id，后边要用到
  		transaction-manager:写的是事务管理器的id
  	 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- find开头的方法加只读事务 ，*表示通配符，匹配任意方法-->
            <tx:method name="find*" read-only="true"/>
            <!-- 其余方法是加可读写的事务 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切面 -->
    <aop:config>
        <!-- 配置切入点表达式：告诉框架哪些方法要控制事务 -->
        <aop:pointcut expression="execution(* cn.itcast.service.impl.*.*(..))" id="pt"/>
        <!--将定义好的事务属性应用到上述的切入点 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
    </aop:config>
</beans>
